import os
import time
from modules.features.BofExtractor import BofExtractor

def processLabel(pathDirImagesBase, pathDirDatasets, bofExtractor, pathDirBofs, datasetLabel):
    
    # Directory where the images are located
    pathDirImages = os.path.join( pathDirImagesBase, datasetLabel ) 
    if not os.path.exists(pathDirImages):
        print 'ERROR: Directory not found ' + pathDirImages
        return
     
    # File containing the image IDs   
    pathFileDataset = os.path.join( pathDirDatasets, 'train.txt' )
    #pathFileDataset = os.path.join( pathDirDatasets, 'test.txt' )
    if not os.path.exists(pathFileDataset):
        print 'ERROR: File not found ' + pathFileDataset
        return    
        
    print 'Extracting BoF from ' + pathFileDataset + "..."

    # Directory for BoFs
    pathDirBofLabel = os.path.join( pathDirBofs, datasetLabel )    
    if not os.path.exists(pathDirBofLabel):
        os.makedirs(pathDirBofLabel)
        
    bofExtractor.processTxtFile( pathFileDataset, pathDirImages, 'jpg', pathDirBofLabel)
    
    
# Main
def main():
    if __name__ == "__main__":
        
        pathHome = os.path.expanduser('~')
        
#        pathWork = os.path.join( pathHome, 'work', 'mediaeval','2013-sed','classification' )
        pathWork = os.path.join(pathHome, 'Desktop/projecte') 
        pathDirImagesBase = os.path.join(pathWork, '1_images')
        pathDirDatasets = os.path.join(pathWork, '2_datasets')
        pathFileVocabulary = os.path.join( pathWork, '3_vocabulary','vocabulary.p' )
        pathDirBofs = os.path.join(pathWork, '4_bof')
        
        t_ref = time.time()
        
        # Init the BoF extractor
        bofExtractor = BofExtractor(pathFileVocabulary, flagVerbose=False)
        
        # Process the train dataset
        processLabel(pathDirImagesBase, pathDirDatasets, bofExtractor, pathDirBofs, 'train')
        #processLabel(pathDirImagesBase, pathDirDatasets, bofExtractor, pathDirBofs, 'test')
        
        # Process the test dataset
        #processLabel(bofExtractor, pathDirBofs, 'test')
        
        visual_time = time.time() - t_ref
        print "ha trigat", visual_time, "segons"
        
        print "Extracting BoF... done."
        

main()
